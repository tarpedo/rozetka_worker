parameters:
  app.auth.known_applications:
    - name: 'Crm'
      key: '%env(AUTH_APP_CRM)%'

services:
  _defaults:
    autowire: true
    autoconfigure: true

  admin.rozetka_accounts:
    class: App\Admin\RozetkaAccountsAdmin
    tags:
      - { name: sonata.admin, model_class: App\Entity\Rozetka\Account, manager_type: orm, label: Account }

  App\:
    resource: '../src/'
    exclude:
      - '../src/Kernel.php'

  App\ThirdParty\Amazon\Sqs\MessageResolver:
    public: true
    arguments: [ !tagged_iterator { tag: 'app.amazon.sqs.message.factory' } ]

  App\Kernel\FileStorage\EngineInterface:
    factory: [ '@App\Kernel\FileStorage\EngineFactory', 'create' ]
  App\Kernel\FileStorage\EngineFactory:
    arguments:
      $engine: '%env(FILE_STORAGE_ENGINE)%'
      $googleAppKeyfile: '%env(GOOGLE_APPLICATION_CREDENTIALS)%'
      $googleStorageBucket: '%env(GOOGLE_STORAGE_BUCKET)%'

  App\Kernel\FoldersStructure:
    arguments:
      $projectDir: '%kernel.project_dir%'

  App\PrivateApi\KnownApp\RepositoryFactory:
    arguments:
      $rawApplications: '%app.auth.known_applications%'
  App\PrivateApi\KnownApp\Repository:
    autowire: false
    factory: [ '@App\PrivateApi\KnownApp\RepositoryFactory', 'create' ]

  App\Console\GenerateJwt:
    arguments:
      $rawApplications: '%app.auth.known_applications%'

  _instanceof:
    App\PrivateApi\ControllerInterface:
      tags: [ 'controller.service_arguments' ]
